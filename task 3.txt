import os
import cv2
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

# Define paths
data_path = 'path/to/dataset'
categories = ['cat', 'dog']

# Load and preprocess images
def load_data(data_path, categories, img_size=(64, 64)):
    data = []
    labels = []
    for category in categories:
        path = os.path.join(data_path, category)
        label = categories.index(category)
        for img in os.listdir(path):
            img_path = os.path.join(path, img)
            image = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)
            image = cv2.resize(image, img_size)
            data.append(image.flatten())
            labels.append(label)
    return np.array(data), np.array(labels)

# Load data
X, y = load_data(data_path, categories)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train SVM model
svm = SVC(kernel='linear')
svm.fit(X_train, y_train)

# Make predictions
y_pred = svm.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy * 100:.2f}%')
